version: '3.5'

services:

  input_db:
    container_name: input_db
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./pagila-schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ./pagila-data.sql:/docker-entrypoint-initdb.d/2.sql
    ports: [ "6000:5432" ]

  output_db:
    container_name: output_db
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./pagila-schema.sql:/docker-entrypoint-initdb.d/1.sql
    ports: [ "6001:5432" ]

  tdk:
    container_name: tdk
    build:
      context: .
    environment:
      SYNTHESIZED_INPUT_URL: jdbc:postgresql://input_db:5432/postgres
      SYNTHESIZED_INPUT_USERNAME: postgres
      SYNTHESIZED_INPUT_PASSWORD: postgres
      SYNTHESIZED_OUTPUT_URL: jdbc:postgresql://output_db:5432/postgres
      SYNTHESIZED_OUTPUT_USERNAME: postgres
      SYNTHESIZED_OUTPUT_PASSWORD: postgres
      SYNTHESIZED_USERCONFIG_FILE: /app/config.yaml
      TDK_WORKINGDIRECTORY_PATH: /app/data
      TDK_WORKINGDIRECTORY_ENABLED: true
      JAVA_TOOL_OPTIONS: >
        -Dlogging.level.io.synthesized.testingsuite.executor.lite.LiteTransformer=INFO
        -Dlogging.level.io.synthesized.testingsuite=WARN
        -Dlogging.level.com.zaxxer.hikari=WARN
        -Dlogging.level.org.reflections=WARN
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=80.0
        -Dspring.main.banner-mode=CONSOLE
        -Dspring.banner.location=file:/app/banner.txt
    volumes:
      - ./config_subsetting.tdk.yaml:/app/config.yaml
      - ./banner.txt:/app/banner.txt
      - ./data:/app/data
    depends_on:
      - input_db
      - output_db
    restart: on-failure
    command: >
      sh -c "wait4ports -q -t 60 tcp://input_db:5432 tcp://output_db:5432
      ; cd /app ; java org.springframework.boot.loader.JarLauncher"
