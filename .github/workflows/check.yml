name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yamllint

      - name: Verify yamls
        run: |
          yamllint -sd relaxed .


  generation_from_scratch:
    needs: yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build docker-compose
        run: |
          docker-compose pull
          docker-compose build

      - name: Run the workflow
        run: |
          export CONFIG_FILE=config_generation_from_scratch.tdk.yaml
          docker-compose run tdk

      - name: Verify input data
        run: >
          docker-compose run check scan -d input_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_empty_input_db.yaml

      - name: Verify output data
        run: >
          docker-compose run check scan -d output_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_generation_from_scratch.yaml


  masking:
    needs: yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build docker-compose
        run: |
          docker-compose pull
          docker-compose build

      - name: Run the workflow
        run: |
          export CONFIG_FILE=config_masking.tdk.yaml
          docker-compose -f docker-compose.yaml -f input-db.yaml run tdk

      - name: Verify input data
        run: >
          docker-compose run check scan -d input_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_input_db.yaml

      - name: Verify output data
        run: >
          docker-compose run check scan -d output_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_masking.yaml


  subsetting:
    needs: yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build docker-compose
        run: |
          docker-compose pull
          docker-compose build

      - name: Run the workflow
        run: |
          export CONFIG_FILE=config_subsetting.tdk.yaml
          docker-compose -f docker-compose.yaml -f input-db.yaml run tdk

      - name: Verify input data
        run: >
          docker-compose run check scan -d input_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_input_db.yaml

      - name: Verify output data
        run: >
          docker-compose run check scan -d output_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_subsetting.yaml


  generation:
    needs: yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build docker-compose
        run: |
          docker-compose pull
          docker-compose build

      - name: Run the workflow
        run: |
          export CONFIG_FILE=config_generation.tdk.yaml
          docker-compose -f docker-compose.yaml -f input-db.yaml run tdk

      - name: Verify input data
        run: >
          docker-compose run check scan -d input_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_input_db.yaml

      - name: Verify output data
        run: >
          docker-compose run check scan -d output_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_2x_generation.yaml

  simplified:
    needs: yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install wait4x
        run: |
          curl -#LO https://github.com/atkrad/wait4x/releases/latest/download/wait4x-linux-amd64.tar.gz
          tar --one-top-level -xvf wait4x-linux-amd64.tar.gz
          cp ./wait4x-linux-amd64/wait4x /usr/local/bin/wait4x

      - name: Build docker-compose
        run: |
          docker-compose pull

      - name: Run the docker-compose
        run: docker-compose -f pagila-simplified.yaml up -d
      
      - name: Wait for databases
        run: |
          wait4x postgresql postgres://postgres:postgres@localhost:6000/postgres
          wait4x postgresql postgres://postgres:postgres@localhost:6001/postgres

      - name: Verify input data
        run: >
          docker-compose -f pagila-simplified.yaml run check scan -d input_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_input_db.yaml

      - name: Verify output data
        run: >
          docker-compose run -f pagila-simplified.yaml check scan -d output_db
          -c /sodacl/configuration.yaml
          /sodacl/checks_for_empty_input_db.yaml
